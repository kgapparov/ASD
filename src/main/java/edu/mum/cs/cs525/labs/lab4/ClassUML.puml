@startuml
class Application{
    +main()
}
interface AccountService{
    +createAccount()
    +deposit()
    +withdrow()
    +transferFunds()
    +getAllAccounts()
    +getAccount()
}
interface AccountDao{
    +saveAccount()
    +updateAccount()
    +loadAccount()
    +getAccounts()
}
class Account{
    +accountNumber
    +interestAdder
    +coulculateInterest
}
class Customer {
    +name
}

class AccountEntry {
    +date
    +amount
    +description
    +fromAccountNumber
    +fromPersonName
}
abstract class AccountDAOFactory {
    +{abstract}createAccountDao()
}

interface CustomerService

interface Subject {
    +register(Observer o);
    +remove(Observer o);
    +setEnviroment(EnvironmentType type);
}

class Environment {
     +register(Observer o);
     +remove(Observer o);
     +setEnviroment(EnvironmentType type);
     +observer
}
interface Observer{
    +update(EnvironmentType type)
}

AccountService ..|> Observer
AccountService --> Environment
CustomerService --> Environment
CustomerService ..|> Observer
Environment ..|> Subject
Subject --|> Observer
AccountDaoImpl ..|> AccountDao
MockAccountDaoImpl ..|> AccountDao
AccountServiceImpl ..|> AccountService
Application --> AccountService
AccountService ..> Account
Account --> Customer : belongs
Account *- AccountEntry: has *
AccountServiceImpl --|> AccountDAOFactory
AccountDAOFactory --> AccountDao
CustomerServiceImpl ..|> CustomerService
CustomerService --> Customer
CustomerServiceImpl --|> AccountDAOFactory

@enduml